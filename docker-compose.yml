version: '3'

services:
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - '8080:80'
    volumes:
      - .:/var/www/OnlineAuction
      - ./Build/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - microservice_auction
      - microservice_authentication
      - database

  redis:
    image: redis:7.0.5-alpine3.16
    container_name: redis
    ports:
      - '6380:6380'
    environment:
      - ALLOW_EMPTY_PASSWORD=true

  amqp:
    image: rabbitmq:3.11.0-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-pass}
    logging:
      driver: none

  microservice_authentication:
    container_name: microservice_authentication
    build:
      context: ./AuthenticationService/Docker
    volumes:
      - ./AuthenticationService:/var/www/OnlineAuction/AuthenticationService:rw
      - ./Build/php_microservice:/var/www/scripts:rw
    #command: /bin/sh /var/www/scripts/message_reader_script.sh
    depends_on:
      - database
      - amqp

  microservice_auction:
    container_name: microservice_auction
    build:
      context: ./AuctionService/Docker
    volumes:
      - ./AuctionService:/var/www/OnlineAuction/AuctionService:rw
      - ./Build/php_microservice:/var/www/scripts:rw
   # command: /bin/sh /var/www/scripts/message_reader_script.sh
    depends_on:
      - database
      - amqp

volumes:
  db-data:
